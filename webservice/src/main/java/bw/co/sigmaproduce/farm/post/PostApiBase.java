// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices. Do not modify by hand!.
//
package bw.co.sigmaproduce.farm.post;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;

public abstract class PostApiBase implements PostApi {

    protected Logger logger = LoggerFactory.getLogger(PostApi.class);
        protected final PostService postService;

    public PostApiBase(
        PostService postService    ) {
        this.postService = postService;
    }

    public ResponseEntity<?> findById(String id) {
        return handleFindById(id);
    }

    public abstract ResponseEntity<?> handleFindById(String id);

    public ResponseEntity<?> findFarmPosts(String farmId) {
        return handleFindFarmPosts(farmId);
    }

    public abstract ResponseEntity<?> handleFindFarmPosts(String farmId);

    public ResponseEntity<?> findFarmPostsPaged(String farmId, Integer pageSize, Integer pageNumber) {
        return handleFindFarmPostsPaged(farmId, pageSize, pageNumber);
    }

    public abstract ResponseEntity<?> handleFindFarmPostsPaged(String farmId, Integer pageSize, Integer pageNumber);

    public ResponseEntity<?> getAll() {
        return handleGetAll();
    }

    public abstract ResponseEntity<?> handleGetAll();

    public ResponseEntity<?> remove(String id) {
        return handleRemove(id);
    }

    public abstract ResponseEntity<?> handleRemove(String id);

    public ResponseEntity<?> save(PostVO post) {
        return handleSave(post);
    }

    public abstract ResponseEntity<?> handleSave(PostVO post);

    public ResponseEntity<?> search(String criteria) {
        return handleSearch(criteria);
    }

    public abstract ResponseEntity<?> handleSearch(String criteria);

    /**
     * Gets the reference to <code>$serviceRef.daoName</code>.
     * @return postService
     */
    protected PostService getPostService()
    {
        return this.postService;
    }

}