// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices. Do not modify by hand!.
//
package bw.co.sigmaproduce.farm.cultivation.problem;

import bw.co.sigmaproduce.farm.cultivation.CultivationCriteria;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;

public abstract class CultivationProblemApiBase implements CultivationProblemApi {

    protected Logger logger = LoggerFactory.getLogger(CultivationProblemApi.class);
        protected final CultivationProblemService cultivationProblemService;

    public CultivationProblemApiBase(
        CultivationProblemService cultivationProblemService    ) {
        this.cultivationProblemService = cultivationProblemService;
    }

    public ResponseEntity<?> findById(String id) {
        return handleFindById(id);
    }

    public abstract ResponseEntity<?> handleFindById(String id);

    public ResponseEntity<?> getAll() {
        return handleGetAll();
    }

    public abstract ResponseEntity<?> handleGetAll();

    public ResponseEntity<?> getAllPaged(Integer pageNumber, Integer pageSize) {
        return handleGetAllPaged(pageNumber, pageSize);
    }

    public abstract ResponseEntity<?> handleGetAllPaged(Integer pageNumber, Integer pageSize);

    public ResponseEntity<?> pagedSearch(Integer pageNumber, Integer pageSize, CultivationCriteria criteria) {
        return handlePagedSearch(pageNumber, pageSize, criteria);
    }

    public abstract ResponseEntity<?> handlePagedSearch(Integer pageNumber, Integer pageSize, CultivationCriteria criteria);

    public ResponseEntity<?> remove(String id) {
        return handleRemove(id);
    }

    public abstract ResponseEntity<?> handleRemove(String id);

    public ResponseEntity<?> save(CultivationProblemVO cultivationProblem) {
        return handleSave(cultivationProblem);
    }

    public abstract ResponseEntity<?> handleSave(CultivationProblemVO cultivationProblem);

    public ResponseEntity<?> search(CultivationCriteria criteria) {
        return handleSearch(criteria);
    }

    public abstract ResponseEntity<?> handleSearch(CultivationCriteria criteria);

    /**
     * Gets the reference to <code>$serviceRef.daoName</code>.
     * @return cultivationProblemService
     */
    protected CultivationProblemService getCultivationProblemService()
    {
        return this.cultivationProblemService;
    }

}