// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices. Do not modify by hand!.
//
package bw.co.sigmaproduce.crop;

import bw.co.sigmaproduce.crop.issue.CropIssueType;
import io.swagger.v3.oas.annotations.Operation;
import java.util.Set;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

/**
 * 
 * TODO: Model Documentation for bw.co.sigmaproduce.crop.CropApi
 */
public interface CropApi {

    @GetMapping("/types")
    public ResponseEntity<?> findByCropTypes(@RequestParam(name = "cropTypeIds", required = false) Set<String> cropTypeIds);

    @GetMapping("/{id}")
    @Operation(summary = "Find Crop by id", description = "Get the cropp with the given id")
    public ResponseEntity<?> findById(@PathVariable(name = "id", required = true) String id);

    @GetMapping("/issue/type")
    public ResponseEntity<?> findByIssueType(@RequestParam(name = "issueType", required = true) CropIssueType issueType);

    @GetMapping()
    @Operation(summary = "Get Crops", description = "Get all all crops in the data store")
    public ResponseEntity<?> getAll();

    @GetMapping("/page/{pageNumber}/size/{pageSize}")
    @Operation(summary = "Get Crops Page", description = "Get {pageSize} crops with for a particular {pageNumber}")
    public ResponseEntity<?> getAllPaged(@PathVariable(name = "pageNumber", required = false) Integer pageNumber, @PathVariable(name = "pageSize", required = false) Integer pageSize);

    @GetMapping("/search/page/{pageNumber}/size/{pageSize}")
    @Operation(summary = "Search Crops Page", description = "Get {pageSize} crops for a particular {pageNumber} given a search criteria")
    public ResponseEntity<?> pagedSearch(@PathVariable(name = "pageNumber", required = false) Integer pageNumber, @PathVariable(name = "pageSize", required = false) Integer pageSize, @RequestParam(name = "criteria", required = true) String criteria);

    @DeleteMapping("/{id}")
    @Operation(summary = "Remove crop by id", description = "Remove the crop with the given id")
    public ResponseEntity<?> remove(@PathVariable(name = "id", required = true) String id);

    @PostMapping()
    @Operation(summary = "Save Crop", description = "Save acrops to data store")
    public ResponseEntity<?> save(@RequestBody(required = true) CropVO crop);

    @PostMapping("search")
    @Operation(summary = "Search Crops", description = "Search crops based on the criteria")
    public ResponseEntity<?> search(@RequestParam(name = "criteria", required = false) String criteria);
}