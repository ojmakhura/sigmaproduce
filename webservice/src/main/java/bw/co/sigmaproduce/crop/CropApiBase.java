// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices. Do not modify by hand!.
//
package bw.co.sigmaproduce.crop;

import bw.co.sigmaproduce.crop.issue.CropIssueType;
import java.util.Set;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;

public abstract class CropApiBase implements CropApi {

    protected Logger logger = LoggerFactory.getLogger(CropApi.class);
        protected final CropService cropService;

    public CropApiBase(
        CropService cropService    ) {
        this.cropService = cropService;
    }

    public ResponseEntity<?> findByCropTypes(Set<String> cropTypeIds) {
        return handleFindByCropTypes(cropTypeIds);
    }

    public abstract ResponseEntity<?> handleFindByCropTypes(Set<String> cropTypeIds);

    public ResponseEntity<?> findById(String id) {
        return handleFindById(id);
    }

    public abstract ResponseEntity<?> handleFindById(String id);

    public ResponseEntity<?> findByIssueType(CropIssueType issueType) {
        return handleFindByIssueType(issueType);
    }

    public abstract ResponseEntity<?> handleFindByIssueType(CropIssueType issueType);

    public ResponseEntity<?> getAll() {
        return handleGetAll();
    }

    public abstract ResponseEntity<?> handleGetAll();

    public ResponseEntity<?> getAllPaged(Integer pageNumber, Integer pageSize) {
        return handleGetAllPaged(pageNumber, pageSize);
    }

    public abstract ResponseEntity<?> handleGetAllPaged(Integer pageNumber, Integer pageSize);

    public ResponseEntity<?> pagedSearch(Integer pageNumber, Integer pageSize, String criteria) {
        return handlePagedSearch(pageNumber, pageSize, criteria);
    }

    public abstract ResponseEntity<?> handlePagedSearch(Integer pageNumber, Integer pageSize, String criteria);

    public ResponseEntity<?> remove(String id) {
        return handleRemove(id);
    }

    public abstract ResponseEntity<?> handleRemove(String id);

    public ResponseEntity<?> save(CropVO crop) {
        return handleSave(crop);
    }

    public abstract ResponseEntity<?> handleSave(CropVO crop);

    public ResponseEntity<?> search(String criteria) {
        return handleSearch(criteria);
    }

    public abstract ResponseEntity<?> handleSearch(String criteria);

    /**
     * Gets the reference to <code>$serviceRef.daoName</code>.
     * @return cropService
     */
    protected CropService getCropService()
    {
        return this.cropService;
    }

}