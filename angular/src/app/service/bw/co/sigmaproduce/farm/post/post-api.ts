// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { Post } from '@app/${import.filePath}';
import { PostVO } from '@app/model/bw/co/sigmaproduce/farm/post/post-vo';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class PostApi {
    
    protected path = '/farm/post';

    private http = inject(HttpClient);

    public findById(id: string | any ): Observable<PostVO | any> {

        return this.http.get<PostVO | any>(this.path + `/${id}`);
    }

    public findFarmPosts(farmId: string | any ): Observable<Post[] | any[]> {

        return this.http.get<Post[] | any[]>(this.path + `/byFarm?farmId=${farmId}`);
    }

    public findFarmPostsPaged(farmId: string | any , pageSize: number | any , pageNumber: number | any ): Observable<Page<PostVO> | any> {

        return this.http.get<Page<PostVO> | any>(this.path + `/byFarm/paged`);
    }

    public getAll(): Observable<PostVO[] | any[]> {

        return this.http.get<PostVO[] | any[]>(this.path);
    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);
    }

    public save(post: PostVO | any ): Observable<PostVO | any> {

        return this.http.post<PostVO | any>(this.path, post);
    }

    public search(criteria: string | any ): Observable<PostVO[] | any[]> {

        return this.http.get<PostVO[] | any[]>(this.path + `/search?criteria=${criteria}`);
    }

}
