// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { FarmCriteria } from '@app/model/bw/co/sigmaproduce/farm/farm-criteria';
import { FarmListDTO } from '@app/model/bw/co/sigmaproduce/farm/farm-list-dto';
import { FarmDTO } from '@app/model/bw/co/sigmaproduce/farm/farm-dto';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class FarmApi {
    
    protected path = '/farm';

    private http = inject(HttpClient);

    public findByDistrict(districtId: string | any ): Observable<FarmListDTO | any> {

        return this.http.post<FarmListDTO | any>(`${this.path}/district/${districtId}`, districtId);
    }

    public findById(id: string | any ): Observable<FarmDTO | any> {

        return this.http.get<FarmDTO | any>(`${this.path}/${id}`);
    }

    public findByVillage(villageId: string | any ): Observable<FarmListDTO | any> {

        return this.http.get<FarmListDTO | any>(`${this.path}/village/${villageId}`);
    }

    public getAll(): Observable<FarmListDTO[] | any[]> {

        return this.http.get<FarmListDTO[] | any[]>(`${this.path}`);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<Page<FarmListDTO> | any> {

        return this.http.get<Page<FarmListDTO> | any>(`${this.path}/page/${pageNumber}/size/${pageSize}`);
    }

    public pagedSearch(pageNumber: number | any , pageSize: number | any , criteria: string | any ): Observable<Page<CropListDTO> | any> {

        return this.http.get<Page<CropListDTO> | any>(`${this.path}/search/page/${pageNumber}/size/${pageSize}?criteria=${criteria}`);
    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(`${this.path}/${id}`);
    }

    public save(farm: FarmDTO | any ): Observable<FarmDTO | any> {

        return this.http.post<FarmDTO | any>(`${this.path}`, farm);
    }

    public search(criteria: FarmCriteria | any ): Observable<FarmListDTO[] | any[]> {

        return this.http.get<FarmListDTO[] | any[]>(`${this.path}/search?criteria=${criteria}`);
    }

}
