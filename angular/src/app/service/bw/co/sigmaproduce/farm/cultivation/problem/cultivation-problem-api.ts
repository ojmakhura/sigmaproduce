// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { CultivationProblemListVO } from '@app/model/bw/co/sigmaproduce/farm/cultivation/problem/cultivation-problem-list-vo';
import { CultivationListVO } from '@app/model/bw/co/sigmaproduce/farm/cultivation/cultivation-list-vo';
import { CultivationCriteria } from '@app/model/bw/co/sigmaproduce/farm/cultivation/cultivation-criteria';
import { CultivationProblemVO } from '@app/model/bw/co/sigmaproduce/farm/cultivation/problem/cultivation-problem-vo';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class CultivationProblemApi {
    
    protected path = '/farm/cultivation/problem';

    private http = inject(HttpClient);

    public findById(id: string | any ): Observable<CultivationProblemVO | any> {

        return this.http.get<CultivationProblemVO | any>(this.path + `/${id}`);
    }

    public getAll(): Observable<CultivationProblemListVO[] | any[]> {

        return this.http.get<CultivationProblemListVO[] | any[]>(this.path);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<Page<CultivationProblemListVO> | any> {

        return this.http.get<Page<CultivationProblemListVO> | any>(this.path + `/page/${pageNumber}/size/${pageSize}`);
    }

    public pagedSearch(pageNumber: number | any , pageSize: number | any , criteria: CultivationCriteria | any ): Observable<Page<CultivationListVO> | any> {

        return this.http.get<Page<CultivationListVO> | any>(this.path + `/search/page/${pageNumber}/size/${pageSize}?criteria=${criteria}`);
    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);
    }

    public save(cultivationProblem: CultivationProblemVO | any ): Observable<CultivationProblemVO | any> {

        return this.http.post<CultivationProblemVO | any>(this.path, cultivationProblem);
    }

    public search(criteria: CultivationCriteria | any ): Observable<CultivationListVO[] | any[]> {

        return this.http.get<CultivationListVO[] | any[]>(this.path + `/search?criteria=${criteria}`);
    }

}
