// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { CropVarietyDTO } from '@app/model/bw/co/sigmaproduce/crop/variety/crop-variety-dto';
import { CropVarietyList } from '@app/model/bw/co/sigmaproduce/crop/variety/crop-variety-list';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class CropVarietyApi {
    
    protected path = '/crop/variety';

    private http = inject(HttpClient);

    public findById(id: string | any ): Observable<CropVarietyDTO | any> {

        return this.http.get<CropVarietyDTO | any>(`${this.path}/${id}`);
    }

    public getAll(): Observable<CropVarietyList[] | any[]> {

        return this.http.get<CropVarietyList[] | any[]>(`${this.path}`);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<Page<CropVarietyList> | any> {

        return this.http.get<Page<CropVarietyList> | any>(`${this.path}/page/${pageNumber}/size/${pageSize}`);
    }

    public pagedSearch(pageNumber: number | any , pageSize: number | any , criteria: string | any ): Observable<Page<CropVarietyList> | any> {

        return this.http.get<Page<CropVarietyList> | any>(`${this.path}/search/page/${pageNumber}/size/${pageSize}?criteria=${criteria}`);
    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(`${this.path}/${id}`);
    }

    public save(cropVariety: CropVarietyDTO | any ): Observable<CropVarietyDTO | any> {

        return this.http.post<CropVarietyDTO | any>(`${this.path}`, cropVariety);
    }

    public search(criteria: string | any ): Observable<CropVarietyList[] | any[]> {

        return this.http.get<CropVarietyList[] | any[]>(`${this.path}/search?criteria=${criteria}`);
    }

}
