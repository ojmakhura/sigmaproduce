// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { CropIssueDTO } from '@app/model/bw/co/sigmaproduce/crop/issue/crop-issue-dto';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class CropIssueApi {
    
    protected path = '/crop/issue';

    private http = inject(HttpClient);

    public findById(id: string | any ): Observable<CropIssueDTO | any> {

        return this.http.get<CropIssueDTO | any>(`${this.path}/${id}`);
    }

    public getAll(): Observable<CropIssueDTO[] | any[]> {

        return this.http.get<CropIssueDTO[] | any[]>(`${this.path}/all`);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<Page<CropIssueDTO>[] | any[]> {

        return this.http.get<Page<CropIssueDTO>[] | any[]>(`${this.path}/all/paged?pageNumber=${pageNumber}&pageSize=${pageSize}`);
    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(`${this.path}/${id}`);
    }

    public save(cropIssue: CropIssueDTO | any ): Observable<CropIssueDTO | any> {

        return this.http.post<CropIssueDTO | any>(`${this.path}`, cropIssue);
    }

    public search(criteria: string | any ): Observable<CropIssueDTO[] | any[]> {

        return this.http.get<CropIssueDTO[] | any[]>(`${this.path}/search?criteria=${criteria}`);
    }

    public searchByType(type: CropIssueType | any ): Observable<CropIssueDTO[] | any[]> {

        return this.http.get<CropIssueDTO[] | any[]>(`${this.path}/search/type`);
    }

    public searchByTypeAndCrop(type: CropIssueType | any , cropId: string | any ): Observable<CropIssueDTO[] | any[]> {

        return this.http.get<CropIssueDTO[] | any[]>(`${this.path}/search/crop/${cropId}/type/${type}`);
    }

    public searchByTypeAndCropPaged(type: CropIssueType | any , cropId: string | any , pageNumber: number | any , pageSize: number | any ): Observable<Page<CropIssueDTO>[] | any[]> {

        return this.http.get<Page<CropIssueDTO>[] | any[]>(`${this.path}/search/paged/crop/${cropId}/type/${type}`);
    }

    public searchPaged(criteria: string | any , pageNumber: number | any , pageSize: number | any ): Observable<Page<CropIssueDTO>[] | any[]> {

        return this.http.get<Page<CropIssueDTO>[] | any[]>(`${this.path}/search/paged?criteria=${criteria}&pageNumber=${pageNumber}&pageSize=${pageSize}`);
    }

}
