// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringRepository.vsl in andromda-spring-cartridge on $springUtils.date. Do not modify by hand!.
//
package bw.co.sigmaproduce.crop;

import bw.co.sigmaproduce.TimePeriod;
import java.io.File;
import java.time.LocalDateTime;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;

public interface CropRepository extends 
        JpaRepository<Crop, String>,
        JpaSpecificationExecutor<Crop> {

    // Generating pageable query method for id
    Page<Crop> findByIdNull(Pageable pageable);

    Page<Crop> findByIdStartingWithIgnoreCase(String id, Pageable pageable);
    
    Page<Crop> findByIdEndingWithIgnoreCase(String id, Pageable pageable);
    
    Page<Crop> findByIdContainingIgnoreCase(String id, Pageable pageable);
    
    Page<Crop> findByIdLikeIgnoreCase(String id, Pageable pageable);
    
    Page<Crop> findByIdNotLikeIgnoreCase(String id, Pageable pageable);
    
    Page<Crop> findByIdContaining(String id, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByIdNot(String id);
    Page<Crop> findByIdNot(String id, Pageable pageable);
    
    List<Crop> findByIdIn(List<String> ids);
    Page<Crop> findByIdIn(List<String> ids, Pageable pageable);
    
    List<Crop> findByIdNotIn(List<String> ids);
    Page<Crop> findByIdNotIn(List<String> ids, Pageable pageable);

    // Generating pageable query method for createdBy
    Page<Crop> findByCreatedBy(String createdBy, Pageable pageable);

    Page<Crop> findByCreatedByStartingWithIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Crop> findByCreatedByEndingWithIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Crop> findByCreatedByContainingIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Crop> findByCreatedByLikeIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Crop> findByCreatedByNotLikeIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Crop> findByCreatedByContaining(String createdBy, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByCreatedByNot(String createdBy);
    Page<Crop> findByCreatedByNot(String createdBy, Pageable pageable);
    
    List<Crop> findByCreatedByIn(List<String> createdBys);
    Page<Crop> findByCreatedByIn(List<String> createdBys, Pageable pageable);
    
    List<Crop> findByCreatedByNotIn(List<String> createdBys);
    Page<Crop> findByCreatedByNotIn(List<String> createdBys, Pageable pageable);

    // Generating pageable query method for updatedBy
    Page<Crop> findByUpdatedByNull(Pageable pageable);

    Page<Crop> findByUpdatedByStartingWithIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Crop> findByUpdatedByEndingWithIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Crop> findByUpdatedByContainingIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Crop> findByUpdatedByLikeIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Crop> findByUpdatedByNotLikeIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Crop> findByUpdatedByContaining(String updatedBy, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByUpdatedByNot(String updatedBy);
    Page<Crop> findByUpdatedByNot(String updatedBy, Pageable pageable);
    
    List<Crop> findByUpdatedByIn(List<String> updatedBys);
    Page<Crop> findByUpdatedByIn(List<String> updatedBys, Pageable pageable);
    
    List<Crop> findByUpdatedByNotIn(List<String> updatedBys);
    Page<Crop> findByUpdatedByNotIn(List<String> updatedBys, Pageable pageable);

    // Generating pageable query method for updatedDate
    Page<Crop> findByUpdatedDateNull(Pageable pageable);

    Page<Crop> findByUpdatedDateAfter(LocalDateTime updatedDate, Pageable pageable);
    
    Page<Crop> findByUpdatedDateBefore(LocalDateTime updatedDate, Pageable pageable);
    
    Page<Crop> findByUpdatedDateBetween(LocalDateTime updatedDateStart, LocalDateTime updatedDateEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByUpdatedDateNot(LocalDateTime updatedDate);
    Page<Crop> findByUpdatedDateNot(LocalDateTime updatedDate, Pageable pageable);
    
    List<Crop> findByUpdatedDateIn(List<LocalDateTime> updatedDates);
    Page<Crop> findByUpdatedDateIn(List<LocalDateTime> updatedDates, Pageable pageable);
    
    List<Crop> findByUpdatedDateNotIn(List<LocalDateTime> updatedDates);
    Page<Crop> findByUpdatedDateNotIn(List<LocalDateTime> updatedDates, Pageable pageable);

    // Generating pageable query method for createdDate
    Page<Crop> findByCreatedDate(LocalDateTime createdDate, Pageable pageable);

    Page<Crop> findByCreatedDateAfter(LocalDateTime createdDate, Pageable pageable);
    
    Page<Crop> findByCreatedDateBefore(LocalDateTime createdDate, Pageable pageable);
    
    Page<Crop> findByCreatedDateBetween(LocalDateTime createdDateStart, LocalDateTime createdDateEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByCreatedDateNot(LocalDateTime createdDate);
    Page<Crop> findByCreatedDateNot(LocalDateTime createdDate, Pageable pageable);
    
    List<Crop> findByCreatedDateIn(List<LocalDateTime> createdDates);
    Page<Crop> findByCreatedDateIn(List<LocalDateTime> createdDates, Pageable pageable);
    
    List<Crop> findByCreatedDateNotIn(List<LocalDateTime> createdDates);
    Page<Crop> findByCreatedDateNotIn(List<LocalDateTime> createdDates, Pageable pageable);

    // Generating pageable query method for name
    Page<Crop> findByName(String name, Pageable pageable);

    Page<Crop> findByNameStartingWithIgnoreCase(String name, Pageable pageable);
    
    Page<Crop> findByNameEndingWithIgnoreCase(String name, Pageable pageable);
    
    Page<Crop> findByNameContainingIgnoreCase(String name, Pageable pageable);
    
    Page<Crop> findByNameLikeIgnoreCase(String name, Pageable pageable);
    
    Page<Crop> findByNameNotLikeIgnoreCase(String name, Pageable pageable);
    
    Page<Crop> findByNameContaining(String name, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByNameNot(String name);
    Page<Crop> findByNameNot(String name, Pageable pageable);
    
    List<Crop> findByNameIn(List<String> names);
    Page<Crop> findByNameIn(List<String> names, Pageable pageable);
    
    List<Crop> findByNameNotIn(List<String> names);
    Page<Crop> findByNameNotIn(List<String> names, Pageable pageable);

    // Generating pageable query method for code
    Page<Crop> findByCode(String code, Pageable pageable);

    Page<Crop> findByCodeStartingWithIgnoreCase(String code, Pageable pageable);
    
    Page<Crop> findByCodeEndingWithIgnoreCase(String code, Pageable pageable);
    
    Page<Crop> findByCodeContainingIgnoreCase(String code, Pageable pageable);
    
    Page<Crop> findByCodeLikeIgnoreCase(String code, Pageable pageable);
    
    Page<Crop> findByCodeNotLikeIgnoreCase(String code, Pageable pageable);
    
    Page<Crop> findByCodeContaining(String code, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByCodeNot(String code);
    Page<Crop> findByCodeNot(String code, Pageable pageable);
    
    List<Crop> findByCodeIn(List<String> codes);
    Page<Crop> findByCodeIn(List<String> codes, Pageable pageable);
    
    List<Crop> findByCodeNotIn(List<String> codes);
    Page<Crop> findByCodeNotIn(List<String> codes, Pageable pageable);

    // Search by a list of parameters
    List<Crop> findByImagesNot(File images);
    Page<Crop> findByImagesNot(File images, Pageable pageable);
    
    List<Crop> findByImagesIn(List<File> imagess);
    Page<Crop> findByImagesIn(List<File> imagess, Pageable pageable);
    
    List<Crop> findByImagesNotIn(List<File> imagess);
    Page<Crop> findByImagesNotIn(List<File> imagess, Pageable pageable);

    // Generating pageable query method for description
    Page<Crop> findByDescriptionNull(Pageable pageable);

    Page<Crop> findByDescriptionStartingWithIgnoreCase(String description, Pageable pageable);
    
    Page<Crop> findByDescriptionEndingWithIgnoreCase(String description, Pageable pageable);
    
    Page<Crop> findByDescriptionContainingIgnoreCase(String description, Pageable pageable);
    
    Page<Crop> findByDescriptionLikeIgnoreCase(String description, Pageable pageable);
    
    Page<Crop> findByDescriptionNotLikeIgnoreCase(String description, Pageable pageable);
    
    Page<Crop> findByDescriptionContaining(String description, Pageable pageable);
    
    // Search by a list of parameters
    List<Crop> findByDescriptionNot(String description);
    Page<Crop> findByDescriptionNot(String description, Pageable pageable);
    
    List<Crop> findByDescriptionIn(List<String> descriptions);
    Page<Crop> findByDescriptionIn(List<String> descriptions, Pageable pageable);
    
    List<Crop> findByDescriptionNotIn(List<String> descriptions);
    Page<Crop> findByDescriptionNotIn(List<String> descriptions, Pageable pageable);

    // Generating pageable query method for maturesIn
    Page<Crop> findByMaturesInNull(Pageable pageable);

    // Search by a list of parameters
    List<Crop> findByMaturesInNot(TimePeriod maturesIn);
    Page<Crop> findByMaturesInNot(TimePeriod maturesIn, Pageable pageable);
    
    List<Crop> findByMaturesInIn(List<TimePeriod> maturesIns);
    Page<Crop> findByMaturesInIn(List<TimePeriod> maturesIns, Pageable pageable);
    
    List<Crop> findByMaturesInNotIn(List<TimePeriod> maturesIns);
    Page<Crop> findByMaturesInNotIn(List<TimePeriod> maturesIns, Pageable pageable);

}