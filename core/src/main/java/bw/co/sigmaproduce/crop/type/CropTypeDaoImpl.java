// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.sigmaproduce.crop.type;

import bw.co.sigmaproduce.crop.CropRepository;
import bw.co.sigmaproduce.crop.issue.CropIssueRepository;
import java.util.Collection;
import org.springframework.stereotype.Repository;

/**
 * @see CropType
 */
@Repository("cropTypeDao")
public class CropTypeDaoImpl
    extends CropTypeDaoBase
{
    
    public CropTypeDaoImpl(
        CropRepository cropRepository,
        CropIssueRepository cropIssueRepository,
        CropTypeRepository cropTypeRepository
    ) {

        super(
            cropRepository,
            cropIssueRepository,
            cropTypeRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Collection<CropType> handleFindByCriteria(String criteria)
    {
        // TODO implement public Collection<CropType> handleFindByCriteria(String criteria)
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toCropTypeVO(
        CropType source,
        CropTypeVO target)
    {
        // TODO verify behavior of toCropTypeVO
        super.toCropTypeVO(source, target);
        // WARNING! No conversion for target.createdDate (can't convert source.getCreatedDate():java.util.Date to java.util.Date
        // WARNING! No conversion for target.updatedDate (can't convert source.getUpdatedDate():java.util.Date to java.util.Date
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CropTypeVO toCropTypeVO(final CropType entity)
    {
        // TODO verify behavior of toCropTypeVO
        return super.toCropTypeVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private CropType loadCropTypeFromCropTypeVO(CropTypeVO cropTypeVO)
    {
        // TODO implement loadCropTypeFromCropTypeVO
        throw new UnsupportedOperationException("bw.co.sigmaproduce.crop.type.loadCropTypeFromCropTypeVO(CropTypeVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (cropTypeVO.getId() == null)
        {
            return  CropType.Factory.newInstance();
        }
        else
        {
            return this.load(cropTypeVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public CropType cropTypeVOToEntity(CropTypeVO cropTypeVO)
    {
        // TODO verify behavior of cropTypeVOToEntity
        CropType entity = this.loadCropTypeFromCropTypeVO(cropTypeVO);
        this.cropTypeVOToEntity(cropTypeVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void cropTypeVOToEntity(
        CropTypeVO source,
        CropType target,
        boolean copyIfNull)
    {
        // TODO verify behavior of cropTypeVOToEntity
        super.cropTypeVOToEntity(source, target, copyIfNull);
        // No conversion for target.updatedDate (can't convert source.getUpdatedDate():java.util.Date to java.util.Date
        // No conversion for target.createdDate (can't convert source.getCreatedDate():java.util.Date to java.util.Date
    }
    /**
     * {@inheritDoc}
     */
    @Override
    public void toCropTypeListVO(
        CropType source,
        CropTypeListVO target)
    {
        // TODO verify behavior of toCropTypeListVO
        super.toCropTypeListVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CropTypeListVO toCropTypeListVO(final CropType entity)
    {
        // TODO verify behavior of toCropTypeListVO
        return super.toCropTypeListVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private CropType loadCropTypeFromCropTypeListVO(CropTypeListVO cropTypeListVO)
    {
        // TODO implement loadCropTypeFromCropTypeListVO
        throw new UnsupportedOperationException("bw.co.sigmaproduce.crop.type.loadCropTypeFromCropTypeListVO(CropTypeListVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (cropTypeListVO.getId() == null)
        {
            return  CropType.Factory.newInstance();
        }
        else
        {
            return this.load(cropTypeListVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public CropType cropTypeListVOToEntity(CropTypeListVO cropTypeListVO)
    {
        // TODO verify behavior of cropTypeListVOToEntity
        CropType entity = this.loadCropTypeFromCropTypeListVO(cropTypeListVO);
        this.cropTypeListVOToEntity(cropTypeListVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void cropTypeListVOToEntity(
        CropTypeListVO source,
        CropType target,
        boolean copyIfNull)
    {
        // TODO verify behavior of cropTypeListVOToEntity
        super.cropTypeListVOToEntity(source, target, copyIfNull);
    }
}