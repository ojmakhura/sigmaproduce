// license-header java merge-point
//
/**
 * @author Generated by Service.vsl in andromda-java-cartridge on 06/12/2024 19:31:21+0200 Do not modify by hand!
 *
 * TEMPLATE:     Service.vsl in andromda-java-cartridge.
 * MODEL CLASS:  AndroMDAModel::backend::bw.co.sigmaproduce::crop::variety::CropVarietyService
 * STEREOTYPE:   Service
 */
package bw.co.sigmaproduce.crop.variety;

import java.util.Collection;
import org.springframework.data.domain.Page;

/**
 * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService
 */
public interface CropVarietyService
{
    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.findById
     * @param id TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.findById(id)
     * @return CropVarietyVO
     */
    public CropVarietyVO findById(String id);

    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.getAll
     * @return Collection<CropVarietyList>
     */
    public Collection<CropVarietyList> getAll();

    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.getAll
     * @param pageNumber TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.getAll(pageNumber)
     * @param pageSize TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.getAll(pageSize)
     * @return Page<CropVarietyList>
     */
    public Page<CropVarietyList> getAll(Integer pageNumber, Integer pageSize);

    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.remove
     * @param id TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.remove(id)
     * @return boolean
     */
    public boolean remove(String id);

    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.save
     * @param cropVariety TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.save(cropVariety)
     * @return CropVarietyVO
     */
    public CropVarietyVO save(CropVarietyVO cropVariety);

    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.search
     * @param criteria TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.search(criteria)
     * @return Collection<CropVarietyList>
     */
    public Collection<CropVarietyList> search(String criteria);

    /**
     * TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.search
     * @param pageNumber TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.search(pageNumber)
     * @param pageSize TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.search(pageSize)
     * @param criteria TODO: Model Documentation for bw.co.sigmaproduce.crop.variety.CropVarietyService.search(criteria)
     * @return Page<CropVarietyList>
     */
    public Page<CropVarietyList> search(Integer pageNumber, Integer pageSize, String criteria);

}