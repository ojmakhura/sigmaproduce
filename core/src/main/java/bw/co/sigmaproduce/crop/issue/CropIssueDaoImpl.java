// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.sigmaproduce.crop.issue;

import bw.co.sigmaproduce.crop.CropRepository;
import bw.co.sigmaproduce.crop.type.CropTypeRepository;
import bw.co.sigmaproduce.farm.cultivation.problem.CultivationProblemRepository;
import org.springframework.stereotype.Repository;

/**
 * @see CropIssue
 */
@Repository("cropIssueDao")
public class CropIssueDaoImpl
    extends CropIssueDaoBase
{
    
    public CropIssueDaoImpl(
        CropTypeRepository cropTypeRepository,
        CropRepository cropRepository,
        CultivationProblemRepository cultivationProblemRepository,
        CropIssueRepository cropIssueRepository
    ) {

        super(
            cropTypeRepository,
            cropRepository,
            cultivationProblemRepository,
            cropIssueRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toCropIssueVO(
        CropIssue source,
        CropIssueVO target)
    {
        // TODO verify behavior of toCropIssueVO
        super.toCropIssueVO(source, target);
        // WARNING! No conversion for target.createdDate (can't convert source.getCreatedDate():java.util.Date to java.util.Date
        // WARNING! No conversion for target.updatedDate (can't convert source.getUpdatedDate():java.util.Date to java.util.Date
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CropIssueVO toCropIssueVO(final CropIssue entity)
    {
        // TODO verify behavior of toCropIssueVO
        return super.toCropIssueVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private CropIssue loadCropIssueFromCropIssueVO(CropIssueVO cropIssueVO)
    {
        // TODO implement loadCropIssueFromCropIssueVO
        throw new UnsupportedOperationException("bw.co.sigmaproduce.crop.issue.loadCropIssueFromCropIssueVO(CropIssueVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (cropIssueVO.getId() == null)
        {
            return  CropIssue.Factory.newInstance();
        }
        else
        {
            return this.load(cropIssueVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public CropIssue cropIssueVOToEntity(CropIssueVO cropIssueVO)
    {
        // TODO verify behavior of cropIssueVOToEntity
        CropIssue entity = this.loadCropIssueFromCropIssueVO(cropIssueVO);
        this.cropIssueVOToEntity(cropIssueVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void cropIssueVOToEntity(
        CropIssueVO source,
        CropIssue target,
        boolean copyIfNull)
    {
        // TODO verify behavior of cropIssueVOToEntity
        super.cropIssueVOToEntity(source, target, copyIfNull);
        // No conversion for target.updatedDate (can't convert source.getUpdatedDate():java.util.Date to java.util.Date
        // No conversion for target.createdDate (can't convert source.getCreatedDate():java.util.Date to java.util.Date
    }
}