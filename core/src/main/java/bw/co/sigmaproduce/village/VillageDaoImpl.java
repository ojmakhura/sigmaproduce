// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.sigmaproduce.village;

import bw.co.sigmaproduce.district.District;
import bw.co.sigmaproduce.district.DistrictRepository;
import bw.co.sigmaproduce.district.DistrictDTO;

import org.springframework.stereotype.Repository;

/**
 * @see Village
 */
@Repository("villageDao")
public class VillageDaoImpl
    extends VillageDaoBase
{
    
    public VillageDaoImpl(
        DistrictRepository districtRepository,
        VillageRepository villageRepository
    ) {

        super(
            districtRepository,
            villageRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toVillageDTO(
        Village source,
        VillageDTO target)
    {
        // TODO verify behavior of toVillageDTO
        super.toVillageDTO(source, target);
        // WARNING! No conversion for target.district (can't convert source.getDistrict():bw.co.sigmaproduce.district.District to bw.co.sigmaproduce.district.DistrictDTO
        if(source.getDistrict() != null) {
            DistrictDTO district = new DistrictDTO();
            district.setId(source.getDistrict().getId());
            district.setName(source.getDistrict().getName());

            target.setDistrict(district);
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VillageDTO toVillageDTO(final Village entity)
    {
        // TODO verify behavior of toVillageDTO
        return super.toVillageDTO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Village loadVillageFromVillageDTO(VillageDTO villageDTO)
    {
        if (villageDTO.getId() == null)
        {
            return  Village.Factory.newInstance();
        }
        else
        {
            return this.load(villageDTO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public Village villageDTOToEntity(VillageDTO villageDTO)
    {
        // TODO verify behavior of villageDTOToEntity
        Village entity = this.loadVillageFromVillageDTO(villageDTO);
        this.villageDTOToEntity(villageDTO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void villageDTOToEntity(
        VillageDTO source,
        Village target,
        boolean copyIfNull)
    {
        // TODO verify behavior of villageDTOToEntity
        super.villageDTOToEntity(source, target, copyIfNull);

        if(source.getDistrict() != null) {
            District district = new District();
            district.setId(source.getDistrict().getId());
            district.setName(source.getDistrict().getName());

            target.setDistrict(district);

        }
    }
}