// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringRepository.vsl in andromda-spring-cartridge on $springUtils.date. Do not modify by hand!.
//
package bw.co.sigmaproduce.farm.cultivation;

import bw.co.sigmaproduce.farm.Unit;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;

public interface CultivationRepository extends 
        JpaRepository<Cultivation, String>,
        JpaSpecificationExecutor<Cultivation> {

    // Generating pageable query method for id
    Page<Cultivation> findByIdNull(Pageable pageable);

    Page<Cultivation> findByIdStartingWithIgnoreCase(String id, Pageable pageable);
    
    Page<Cultivation> findByIdEndingWithIgnoreCase(String id, Pageable pageable);
    
    Page<Cultivation> findByIdContainingIgnoreCase(String id, Pageable pageable);
    
    Page<Cultivation> findByIdLikeIgnoreCase(String id, Pageable pageable);
    
    Page<Cultivation> findByIdNotLikeIgnoreCase(String id, Pageable pageable);
    
    Page<Cultivation> findByIdContaining(String id, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByIdNot(String id);
    Page<Cultivation> findByIdNot(String id, Pageable pageable);
    
    List<Cultivation> findByIdIn(List<String> ids);
    Page<Cultivation> findByIdIn(List<String> ids, Pageable pageable);
    
    List<Cultivation> findByIdNotIn(List<String> ids);
    Page<Cultivation> findByIdNotIn(List<String> ids, Pageable pageable);

    // Generating pageable query method for createdBy
    Page<Cultivation> findByCreatedBy(String createdBy, Pageable pageable);

    Page<Cultivation> findByCreatedByStartingWithIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Cultivation> findByCreatedByEndingWithIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Cultivation> findByCreatedByContainingIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Cultivation> findByCreatedByLikeIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Cultivation> findByCreatedByNotLikeIgnoreCase(String createdBy, Pageable pageable);
    
    Page<Cultivation> findByCreatedByContaining(String createdBy, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByCreatedByNot(String createdBy);
    Page<Cultivation> findByCreatedByNot(String createdBy, Pageable pageable);
    
    List<Cultivation> findByCreatedByIn(List<String> createdBys);
    Page<Cultivation> findByCreatedByIn(List<String> createdBys, Pageable pageable);
    
    List<Cultivation> findByCreatedByNotIn(List<String> createdBys);
    Page<Cultivation> findByCreatedByNotIn(List<String> createdBys, Pageable pageable);

    // Generating pageable query method for updatedBy
    Page<Cultivation> findByUpdatedByNull(Pageable pageable);

    Page<Cultivation> findByUpdatedByStartingWithIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Cultivation> findByUpdatedByEndingWithIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Cultivation> findByUpdatedByContainingIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Cultivation> findByUpdatedByLikeIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Cultivation> findByUpdatedByNotLikeIgnoreCase(String updatedBy, Pageable pageable);
    
    Page<Cultivation> findByUpdatedByContaining(String updatedBy, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByUpdatedByNot(String updatedBy);
    Page<Cultivation> findByUpdatedByNot(String updatedBy, Pageable pageable);
    
    List<Cultivation> findByUpdatedByIn(List<String> updatedBys);
    Page<Cultivation> findByUpdatedByIn(List<String> updatedBys, Pageable pageable);
    
    List<Cultivation> findByUpdatedByNotIn(List<String> updatedBys);
    Page<Cultivation> findByUpdatedByNotIn(List<String> updatedBys, Pageable pageable);

    // Generating pageable query method for updatedDate
    Page<Cultivation> findByUpdatedDateNull(Pageable pageable);

    Page<Cultivation> findByUpdatedDateAfter(LocalDateTime updatedDate, Pageable pageable);
    
    Page<Cultivation> findByUpdatedDateBefore(LocalDateTime updatedDate, Pageable pageable);
    
    Page<Cultivation> findByUpdatedDateBetween(LocalDateTime updatedDateStart, LocalDateTime updatedDateEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByUpdatedDateNot(LocalDateTime updatedDate);
    Page<Cultivation> findByUpdatedDateNot(LocalDateTime updatedDate, Pageable pageable);
    
    List<Cultivation> findByUpdatedDateIn(List<LocalDateTime> updatedDates);
    Page<Cultivation> findByUpdatedDateIn(List<LocalDateTime> updatedDates, Pageable pageable);
    
    List<Cultivation> findByUpdatedDateNotIn(List<LocalDateTime> updatedDates);
    Page<Cultivation> findByUpdatedDateNotIn(List<LocalDateTime> updatedDates, Pageable pageable);

    // Generating pageable query method for createdDate
    Page<Cultivation> findByCreatedDate(LocalDateTime createdDate, Pageable pageable);

    Page<Cultivation> findByCreatedDateAfter(LocalDateTime createdDate, Pageable pageable);
    
    Page<Cultivation> findByCreatedDateBefore(LocalDateTime createdDate, Pageable pageable);
    
    Page<Cultivation> findByCreatedDateBetween(LocalDateTime createdDateStart, LocalDateTime createdDateEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByCreatedDateNot(LocalDateTime createdDate);
    Page<Cultivation> findByCreatedDateNot(LocalDateTime createdDate, Pageable pageable);
    
    List<Cultivation> findByCreatedDateIn(List<LocalDateTime> createdDates);
    Page<Cultivation> findByCreatedDateIn(List<LocalDateTime> createdDates, Pageable pageable);
    
    List<Cultivation> findByCreatedDateNotIn(List<LocalDateTime> createdDates);
    Page<Cultivation> findByCreatedDateNotIn(List<LocalDateTime> createdDates, Pageable pageable);

    // Generating pageable query method for cultivationDate
    Page<Cultivation> findByCultivationDateNull(Pageable pageable);

    Page<Cultivation> findByCultivationDateAfter(LocalDate cultivationDate, Pageable pageable);
    
    Page<Cultivation> findByCultivationDateBefore(LocalDate cultivationDate, Pageable pageable);
    
    Page<Cultivation> findByCultivationDateBetween(LocalDate cultivationDateStart, LocalDate cultivationDateEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByCultivationDateNot(LocalDate cultivationDate);
    Page<Cultivation> findByCultivationDateNot(LocalDate cultivationDate, Pageable pageable);
    
    List<Cultivation> findByCultivationDateIn(List<LocalDate> cultivationDates);
    Page<Cultivation> findByCultivationDateIn(List<LocalDate> cultivationDates, Pageable pageable);
    
    List<Cultivation> findByCultivationDateNotIn(List<LocalDate> cultivationDates);
    Page<Cultivation> findByCultivationDateNotIn(List<LocalDate> cultivationDates, Pageable pageable);

    // Generating pageable query method for exptectedHarvestDate
    Page<Cultivation> findByExptectedHarvestDateNull(Pageable pageable);

    Page<Cultivation> findByExptectedHarvestDateAfter(LocalDate exptectedHarvestDate, Pageable pageable);
    
    Page<Cultivation> findByExptectedHarvestDateBefore(LocalDate exptectedHarvestDate, Pageable pageable);
    
    Page<Cultivation> findByExptectedHarvestDateBetween(LocalDate exptectedHarvestDateStart, LocalDate exptectedHarvestDateEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findByExptectedHarvestDateNot(LocalDate exptectedHarvestDate);
    Page<Cultivation> findByExptectedHarvestDateNot(LocalDate exptectedHarvestDate, Pageable pageable);
    
    List<Cultivation> findByExptectedHarvestDateIn(List<LocalDate> exptectedHarvestDates);
    Page<Cultivation> findByExptectedHarvestDateIn(List<LocalDate> exptectedHarvestDates, Pageable pageable);
    
    List<Cultivation> findByExptectedHarvestDateNotIn(List<LocalDate> exptectedHarvestDates);
    Page<Cultivation> findByExptectedHarvestDateNotIn(List<LocalDate> exptectedHarvestDates, Pageable pageable);

    // Generating pageable query method for size
    Page<Cultivation> findBySizeNull(Pageable pageable);

    Page<Cultivation> findBySizeLessThanEqual(Double size, Pageable pageable);
    
    Page<Cultivation> findBySizeGreaterThanEqual(Double size, Pageable pageable);
    
    Page<Cultivation> findBySizeLessThan(Double size, Pageable pageable);
    
    Page<Cultivation> findBySizeGreaterThan(Double size, Pageable pageable);
    
    Page<Cultivation> findBySizeBetween(Double sizeStart, Double sizeEnd, Pageable pageable);
    
    // Search by a list of parameters
    List<Cultivation> findBySizeNot(Double size);
    Page<Cultivation> findBySizeNot(Double size, Pageable pageable);
    
    List<Cultivation> findBySizeIn(List<Double> sizes);
    Page<Cultivation> findBySizeIn(List<Double> sizes, Pageable pageable);
    
    List<Cultivation> findBySizeNotIn(List<Double> sizes);
    Page<Cultivation> findBySizeNotIn(List<Double> sizes, Pageable pageable);

    // Generating pageable query method for unit
    Page<Cultivation> findByUnitNull(Pageable pageable);

    // Search by a list of parameters
    List<Cultivation> findByUnitNot(Unit unit);
    Page<Cultivation> findByUnitNot(Unit unit, Pageable pageable);
    
    List<Cultivation> findByUnitIn(List<Unit> units);
    Page<Cultivation> findByUnitIn(List<Unit> units, Pageable pageable);
    
    List<Cultivation> findByUnitNotIn(List<Unit> units);
    Page<Cultivation> findByUnitNotIn(List<Unit> units, Pageable pageable);

}